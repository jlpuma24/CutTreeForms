package com.treecutforms.utils;

import android.content.Context;
import android.content.SharedPreferences;
/**
 * Created by User on 21/05/2016.
 */
public class PrefsUtil {

    private static final String PREF_NAME = "co.treecutforms.TREECUTFORMS_PREFERENCES";
    private static final String LOGGED = "co.treecutforms.LOGGED";
    private static final String BEFORE_IMAGE = "co.treecutforms.BEFORE_IMAGE";
    private static final String AFTER_IMAGE = "co.treecutforms.AFTER_IMAGE";
    private static final String PRESENT_IMAGE = "co.treecutforms.PRESENT_IMAGE";
    private static final String AUTOGENERATED = "co.treecutforms.AUTOGENERATED";
    private static PrefsUtil sInstance;
    private final SharedPreferences mPreferences;

    private PrefsUtil(Context context) {
        mPreferences = context.getSharedPreferences(PREF_NAME, Context.MODE_PRIVATE);
    }

    public static synchronized void initializeInstance(Context context) {
        if (sInstance == null) {
            sInstance = new PrefsUtil(context);
        }
    }

    public static synchronized PrefsUtil getInstance() {
        if (sInstance == null) {
            throw new IllegalStateException(PrefsUtil.class.getSimpleName() +
                    " is not initialized, call initializeInstance(..) method first.");
        }
        return sInstance;
    }

    public void setBeforePhoto(String photo) {
        SharedPreferences.Editor edit = mPreferences.edit();
        edit.putString(BEFORE_IMAGE, photo);
        edit.commit();
    }

    public void setAfterPhoto(String photo) {
        SharedPreferences.Editor edit = mPreferences.edit();
        edit.putString(AFTER_IMAGE, photo);
        edit.commit();
    }

    public void setPresentPhoto(String photo){
        SharedPreferences.Editor edit = mPreferences.edit();
        edit.putString(PRESENT_IMAGE, photo);
        edit.commit();
    }

    public void setAutogenerated(long autogenerated){
        SharedPreferences.Editor edit = mPreferences.edit();
        edit.putLong(AUTOGENERATED, autogenerated);
        edit.commit();
    }

    public void setLogged(boolean logged){
        SharedPreferences.Editor edit = mPreferences.edit();
        edit.putBoolean(LOGGED, logged);
        edit.commit();
    }

    public String getAfterPhoto() {
        return mPreferences.getString(AFTER_IMAGE, "");
    }

    public String getBeforePhoto() {
        return mPreferences.getString(BEFORE_IMAGE, "");
    }

    public String getPresentPhoto() {
        return mPreferences.getString(PRESENT_IMAGE, "");
    }

    public boolean isLogged(){ return mPreferences.getBoolean(LOGGED, false); }

    public long getAutogenerated(){ return mPreferences.getLong(AUTOGENERATED, 1); }

    public void clearPhotos() {
        SharedPreferences.Editor edit = mPreferences.edit();
        edit.putString(AFTER_IMAGE, "");
        edit.putString(BEFORE_IMAGE, "");
        edit.putString(PRESENT_IMAGE,"");
        edit.commit();
    }

    public void clearUserData(){
        SharedPreferences.Editor edit = mPreferences.edit();
        edit.commit();
    }

    public SharedPreferences.Editor getEditor() {
        return mPreferences.edit();
    }

    public SharedPreferences getPrefs() {
        return mPreferences;
    }
}
